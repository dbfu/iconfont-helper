<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>iconfont</title>
  <style>
    body.vscode-dark {
      background-color: #282c34;
    }

    body.vscode-light {
      background-color: #fafafa;
    }

    .list {
      list-style: none;
      margin: 0;
      padding: 0;
      overflow: hidden;
    }

    .list li {
      position: relative;
      float: left;
      width: 16.66%;
      height: 100px;
      margin: 3px 0;
      padding: 10px 0 0;
      overflow: hidden;
      text-align: center;
      list-style: none;
      background-color: inherit;
      border-radius: 4px;
      cursor: pointer;
      transition: color .3s ease-in-out, background-color .3s ease-in-out;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .vscode-dark li {
      color: #fff;
    }

    .vscode-light li {
      color: #555;
    }

    .text {
      font-size: 14px;
      margin-top: 14px;
    }

    .anticon {
      display: inline-block;
      color: inherit;
      font-style: normal;
      line-height: 0;
      text-align: center;
      text-transform: none;
      vertical-align: -.125em;
      text-rendering: optimizeLegibility;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      transition: transform .3s ease-in-out;
      font-size: 36px;
    }

    .list li:hover {
      background-color: #5867dd;
      color: #fff;
    }

    .list li:hover .anticon {
      transform: scale(1.4);
      color: #fff;
    }

    .nav {
      display: flex;
      list-style: none;
      flex-wrap: wrap;
      padding-left: 0;
      justify-content: center;
      font-size: 15px;
    }

    .nav-link {
      color: #6ea8fe;
      display: block;
      padding: 0.5em 1em;
      text-decoration: none;
      transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out;
      cursor: pointer;
      border-radius: 0.375rem;
    }

    .nav-link:hover {
      color: #9ec5fe;
    }

    .nav-link.active {
      color: #fff;
      background-color: #0d6efd;
    }
  </style>
  <style>
    .loader {
      position: absolute;
      top: 50%;
      left: 40%;
      margin-left: 10%;
      transform: translate3d(-50%, -50%, 0);
    }

    .dot {
      width: 24px;
      height: 24px;
      background: #3ac;
      border-radius: 100%;
      display: inline-block;
      animation: slide 1s infinite;
    }

    .dot:nth-child(1) {
      animation-delay: 0.1s;
      background: #32aacc;
    }

    .dot:nth-child(2) {
      animation-delay: 0.2s;
      background: #64aacc;
    }

    .dot:nth-child(3) {
      animation-delay: 0.3s;
      background: #96aacc;
    }

    .dot:nth-child(4) {
      animation-delay: 0.4s;
      background: #c8aacc;
    }

    .dot:nth-child(5) {
      animation-delay: 0.5s;
      background: #faaacc;
    }

    @-moz-keyframes slide {
      0% {
        transform: scale(1);
      }

      50% {
        opacity: 0.3;
        transform: scale(2);
      }

      100% {
        transform: scale(1);
      }
    }

    @-webkit-keyframes slide {
      0% {
        transform: scale(1);
      }

      50% {
        opacity: 0.3;
        transform: scale(2);
      }

      100% {
        transform: scale(1);
      }
    }

    @-o-keyframes slide {
      0% {
        transform: scale(1);
      }

      50% {
        opacity: 0.3;
        transform: scale(2);
      }

      100% {
        transform: scale(1);
      }
    }

    @keyframes slide {
      0% {
        transform: scale(1);
      }

      50% {
        opacity: 0.3;
        transform: scale(2);
      }

      100% {
        transform: scale(1);
      }
    }
  </style>
  <style>
    .search-box {
      position: fixed;
      top: 15px;
      right: 10px;
      display: flex;
      gap: 12px;
      height: 36px;
      align-items: center;
      z-index: 1;
    }

    .vscode-dark input {
      background-color: rgb(33, 37, 43);
      border-color: #424242;
      color: rgba(255, 255, 255, 0.85);
      box-shadow: 0 0 0 2px rgba(0, 60, 180, 0.15);
    }

    .vscode-light input {
      background-color: #fff;
      border-color: #d9d9d9;
    }

    input {
      box-sizing: border-box;
      margin: 0;
      padding: 4px 11px;
      color: rgba(0, 0, 0, .88);
      font-size: 14px;
      line-height: 1.5714285714285714;
      list-style: none;
      font-family: -apple-system, BlinkMacSystemFont, segoe ui, Roboto, helvetica neue, Arial, noto sans, sans-serif, apple color emoji, segoe ui emoji, segoe ui symbol, noto color emoji;
      position: relative;
      display: inline-block;
      width: 100%;
      min-width: 0;
      background-image: none;
      border-width: 1px;
      border-style: solid;
      border-radius: 6px;
      transition: all .2s;
    }

    input:hover {
      border-color: #4096ff;
      border-inline-end-width: 1px;
    }

    input:active {
      border-color: #4096ff;
      border-inline-end-width: 1px;
    }

    input:focus {
      outline: none;
      border-color: #4096ff;
      border-inline-end-width: 1px;
    }


    .btn {
      outline: none;
      position: relative;
      display: inline-block;
      font-weight: 400;
      white-space: nowrap;
      text-align: center;
      background-image: none;
      background-color: transparent;
      border: 1px solid transparent;
      cursor: pointer;
      transition: all .2s cubic-bezier(.645, .045, .355, 1);
      user-select: none;
      touch-action: manipulation;
      line-height: 1.5714285714285714;
      color: rgba(0, 0, 0, .88);
      font-size: 14px;
      height: 32px;
      padding: 4px 15px;
      border-radius: 6px;
      color: #fff;
      background-color: #1677ff;
      box-shadow: 0 2px 0 rgba(5, 145, 255, .1);
    }
  </style>
  <script src="<%= serverUrl %>"></script>
</head>

<body>
  <ul class="list"></ul>
  <script>

    const list = document.querySelector('.list');

    let observer;
    const targetNode = document.body
    const config = { attributes: false, childList: true, subtree: false };
    const callback = (mutationsList, observer) => {
      const svgs = document.querySelectorAll('svg symbol');
      if (svgs.length) {
        const icons = [];
        svgs.forEach(item => {
          const id = item.id;
          icons.push(id);
        });

        list.innerHTML = icons
          .map(item => `
    <li id="icon_${item}">
        <div>
          <span class="anticon svg">
            <svg width="1em" height="1em" fill="currentColor" aria-hidden="true" focusable="false" class="">
      <use xlink:href="#${item}"></use>
      </svg>
          </span>
          <div class="text">
            ${item}
          </div>
        </div>
      </li>
    `).join('\n');
        observer.disconnect();
      }
    };

    // 创建一个观察器实例并传入回调函数
    observer = new MutationObserver(callback);
    // 以上述配置开始观察目标节点
    observer.observe(targetNode, config);
  </script>
</body>

</html>